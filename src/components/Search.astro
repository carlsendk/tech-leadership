---
import { getCollection } from 'astro:content';

// Get all content
const blogPosts = await getCollection('blog', ({ data }) => !data.draft);
const wikiEntries = await getCollection('wiki', ({ data }) => !data.draft);

// Prepare search data
const searchData = [
  ...blogPosts.map(post => ({
    title: post.data.title,
    description: post.data.description,
    url: `/blog/${post.slug}`,
    type: 'blog',
    category: post.data.category,
    tags: post.data.tags,
  })),
  ...wikiEntries.map(entry => ({
    title: entry.data.title,
    description: entry.data.description,
    url: `/wiki/${entry.slug}`,
    type: 'wiki',
    category: entry.data.category,
    tags: entry.data.tags,
  }))
];
---

<script define:vars={{ searchData }}>
  window.searchData = searchData;
</script>

<div class="relative" x-data="{ 
  open: false, 
  search: '', 
  results: [],
  selectedIndex: -1,
  init() {
    this.$watch('search', value => {
      if (!value.trim()) {
        this.results = [];
        return;
      }
      
      const searchTerm = value.toLowerCase();
      this.results = window.searchData.filter(item => 
        item.title.toLowerCase().includes(searchTerm) ||
        item.description.toLowerCase().includes(searchTerm) ||
        item.category.toLowerCase().includes(searchTerm) ||
        item.tags.some(tag => tag.toLowerCase().includes(searchTerm))
      ).slice(0, 8);
    });

    // Keyboard navigation
    window.addEventListener('keydown', (e) => {
      if (!this.open) return;
      
      if (e.key === 'ArrowDown') {
        e.preventDefault();
        this.selectedIndex = Math.min(this.selectedIndex + 1, this.results.length - 1);
      } else if (e.key === 'ArrowUp') {
        e.preventDefault();
        this.selectedIndex = Math.max(this.selectedIndex - 1, -1);
      } else if (e.key === 'Enter' && this.selectedIndex >= 0) {
        e.preventDefault();
        window.location.href = this.results[this.selectedIndex].url;
      } else if (e.key === 'Escape') {
        this.open = false;
        this.search = '';
      }
    });
  }
}">
  <!-- Search input -->
  <div class="relative">
    <input
      type="search"
      x-model="search"
      @focus="open = true"
      @click.away="open = false"
      placeholder="Search..."
      class="w-full md:w-64 pl-10 pr-4 py-2 text-sm bg-primary-100 dark:bg-primary-800 text-primary-900 dark:text-primary-100 rounded-lg focus:outline-none focus:ring-2 focus:ring-accent-500"
    />
    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
      <svg class="h-5 w-5 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
    </div>
  </div>

  <!-- Search results -->
  <div
    x-show="open && search.length > 0"
    x-transition:enter="transition ease-out duration-200"
    x-transition:enter-start="opacity-0 translate-y-1"
    x-transition:enter-end="opacity-100 translate-y-0"
    x-transition:leave="transition ease-in duration-150"
    x-transition:leave-start="opacity-100 translate-y-0"
    x-transition:leave-end="opacity-0 translate-y-1"
    class="absolute z-50 mt-2 w-full md:w-96 bg-white dark:bg-primary-900 rounded-lg shadow-lg border border-primary-200 dark:border-primary-700"
  >
    <ul class="py-2 max-h-96 overflow-y-auto">
      <template x-if="results.length === 0">
        <li class="px-4 py-3 text-sm text-primary-500 dark:text-primary-400">
          No results found
        </li>
      </template>
      
      <template x-for="(result, index) in results" :key="result.url">
        <li>
          <a
            :href="result.url"
            @mousemove="selectedIndex = index"
            :class="{
              'bg-primary-100 dark:bg-primary-800': selectedIndex === index,
              'hover:bg-primary-50 dark:hover:bg-primary-800/50': selectedIndex !== index
            }"
            class="block px-4 py-3"
          >
            <div class="flex items-center justify-between">
              <span x-text="result.title" class="font-medium text-primary-900 dark:text-primary-100"></span>
              <span
                :class="{
                  'bg-accent-100 text-accent-800 dark:bg-accent-900 dark:text-accent-200': result.type === 'blog',
                  'bg-primary-100 text-primary-800 dark:bg-primary-800 dark:text-primary-200': result.type === 'wiki'
                }"
                class="text-xs px-2 py-1 rounded-full"
                x-text="result.type"
              ></span>
            </div>
            <p x-text="result.description" class="mt-1 text-sm text-primary-600 dark:text-primary-300 line-clamp-2"></p>
            <div class="mt-2 flex items-center gap-2">
              <span class="text-xs text-primary-500 dark:text-primary-400" x-text="result.category"></span>
              <template x-for="tag in result.tags.slice(0, 3)" :key="tag">
                <span class="text-xs text-primary-500 dark:text-primary-400">#<span x-text="tag"></span></span>
              </template>
            </div>
          </a>
        </li>
      </template>
    </ul>
  </div>
</div>