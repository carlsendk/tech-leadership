---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import WikiLayout from "../../layouts/WikiLayout.astro";
import CategoryLayout from "../../layouts/CategoryLayout.astro";
import SubcategoryLayout from "../../layouts/SubcategoryLayout.astro";

interface Props {
  entry: CollectionEntry<"wiki">;
}

export async function getStaticPaths() {
  const wikiEntries = await getCollection(
    "wiki",
    ({ data }: CollectionEntry<"wiki">) => {
      return !data.draft;
    },
  );

  return wikiEntries.map((entry: CollectionEntry<"wiki">) => {
    const generatedSlug = entry.slug.split(/[/\\]/).join("/");

    return {
      params: {
        slug: generatedSlug,
      },
      props: { entry },
    };
  });
}

const { entry } = Astro.props as Props;
const { Content, headings } = await entry.render();

// Determine layout based on displayMode
const displayMode = entry.data.displayMode || 'content';
const isCategoryDisplay = displayMode === 'category';
const isSubcategoryDisplay = displayMode === 'subcategory';

// Fallback to old logic if no displayMode is specified
const isSubcategoryIndex = entry.data.isIndex && entry.data.subcategory;
---

{
  isCategoryDisplay ? (
    <CategoryLayout
      title={entry.data.title}
      description={entry.data.description}
      tags={entry.data.tags}
      category={entry.data.category}
      entry={entry}
    >
      <Content />
    </CategoryLayout>
  ) : isSubcategoryDisplay ? (
    <SubcategoryLayout
      title={entry.data.title}
      description={entry.data.description}
      tags={entry.data.tags}
      category={entry.data.category}
      subcategory={entry.data.subcategory}
      entry={entry}
    >
      <Content />
    </SubcategoryLayout>
  ) : isSubcategoryIndex && entry.data.subcategory ? (
    <SubcategoryLayout
      title={entry.data.title}
      description={entry.data.description}
      tags={entry.data.tags}
      category={entry.data.category}
      subcategory={entry.data.subcategory}
      entry={entry}
    >
      <Content />
    </SubcategoryLayout>
  ) : (
    <WikiLayout
      title={entry.data.title}
      description={entry.data.description}
      tags={entry.data.tags}
      category={entry.data.category}
      headings={headings}
      entry={entry}
    >
      <Content />
    </WikiLayout>
  )
}
