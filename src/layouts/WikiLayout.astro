---
import Layout from "./Layout.astro";
import WikiSidebar from "../components/WikiSidebar.astro";
import TableOfContents from "../components/TableOfContents.astro";
import TagList from "../components/TagList.astro";
import Breadcrumb from "../components/Breadcrumb.astro";
import { getCollection } from "astro:content";
import { generateWikiBreadcrumbs } from "../utils/wiki-breadcrumbs";

export interface Props {
  title: string;
  description: string;
  tags: string[];
  category: string;
  headings: { depth: number; slug: string; text: string }[];
  entry: any; // Wiki entry for breadcrumb generation
}

const { title, description, tags, category, headings, entry } = Astro.props;

// Check if this is an index page (category or subcategory overview)
const isIndexPage = entry.data.isIndex;

// Get all wiki entries for breadcrumb generation
const allWikiEntries = await getCollection("wiki", ({ data }) => !data.draft);

// Generate dynamic breadcrumbs
const breadcrumbs = generateWikiBreadcrumbs(entry, allWikiEntries);

// GitHub edit URL - replace with your repository URL
const githubUrl = "https://github.com/carlsendk/tech-leadership";
const currentPath = Astro.url.pathname;
const editUrl = `${githubUrl}/edit/main/src/content/wiki/${currentPath.split("/").pop()}.md`;
---

<Layout title={title} description={description}>
  <div class="flex flex-col lg:flex-row">
    <!-- Wiki navigation sidebar - ALWAYS show this -->
    <aside
      class="lg:w-64 flex-shrink-0 lg:h-[calc(100vh-64px)] lg:sticky lg:top-16 overflow-y-auto border-r border-primary-200 dark:border-primary-800"
    >
      <WikiSidebar activeCategory={category} currentSlug={entry.slug} />
    </aside>

    <!-- Main content -->
    <main
      class={isIndexPage
        ? "flex-grow px-4 py-6 sm:px-6 lg:px-8 max-w-6xl mx-auto"
        : "flex-grow px-4 py-6 sm:px-6 lg:px-8 max-w-4xl mx-auto"}
    >
      <div class="mb-6">
        <Breadcrumb items={breadcrumbs} />
      </div>

      <article class="fade-in">
        <header class="mb-8">
          <div class="flex items-center justify-between mb-4">
            <div
              class="flex items-center text-sm text-primary-500 dark:text-primary-400"
            >
              <a
                href={`/categories/${category}`}
                class="hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
              >
                {category}
              </a>
            </div>
            <a
              href={editUrl}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center text-sm text-primary-600 dark:text-primary-300 hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
            >
              <svg
                class="w-4 h-4 mr-1"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                ></path>
              </svg>
              Edit on GitHub
            </a>
          </div>

          <h1
            class="text-3xl font-bold text-primary-900 dark:text-primary-100 sm:text-4xl"
          >
            {title}
          </h1>

          <p class="mt-3 text-xl text-primary-600 dark:text-primary-300">
            {description}
          </p>

          <div class="mt-4">
            <TagList tags={tags} />
          </div>
        </header>

        <div class="prose max-w-none dark:prose-dark prose-lg prose-primary">
          <slot />
        </div>

        <!-- Mobile-only related tags section -->
        {
          tags && tags.length > 0 && (
            <div class="mt-8 pt-6 border-t border-primary-200 dark:border-primary-700 lg:hidden">
              <h3 class="text-lg font-semibold text-primary-900 dark:text-primary-100 mb-4">
                Related Tags
              </h3>
              <div class="flex flex-wrap gap-2">
                {tags.map((tag) => (
                  <a
                    href={`/tech-leadership/tags/${tag}/`}
                    class="text-sm text-primary-600 dark:text-primary-400 hover:text-accent-600 dark:hover:text-accent-400 transition-colors bg-primary-100 dark:bg-primary-800 px-3 py-2 rounded-lg"
                  >
                    #{tag}
                  </a>
                ))}
              </div>
            </div>
          )
        }
      </article>
    </main>

    <!-- Table of contents sidebar - only show for non-index pages -->
    {
      !isIndexPage && (
        <aside class="hidden xl:block w-64 flex-shrink-0 h-[calc(100vh-64px)] sticky top-16 overflow-y-auto pl-4 border-l border-primary-200 dark:border-primary-800">
          <TableOfContents headings={headings} />
        </aside>
      )
    }
  </div>
</Layout>
