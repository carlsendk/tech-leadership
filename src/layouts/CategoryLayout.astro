---
import Layout from "./Layout.astro";
import WikiSidebar from "../components/WikiSidebar.astro";
import TagList from "../components/TagList.astro";
import Breadcrumb from "../components/Breadcrumb.astro";
import { getCollection } from "astro:content";
import { generateWikiBreadcrumbs, buildWikiHierarchy } from "../utils/wiki-breadcrumbs";
import { getWikiUrl } from "../utils/url";

export interface Props {
  title: string;
  description: string;
  tags: string[];
  category: string;
  entry: any; // Wiki entry for breadcrumb generation
  heroImage?: string;
  heroImageAlt?: string;
}

const { title, description, tags, category, entry, heroImage, heroImageAlt } = Astro.props;

// Get all wiki entries for breadcrumb generation and hierarchy
const allWikiEntries = await getCollection("wiki", ({ data }) => !data.draft);
const wikiHierarchy = buildWikiHierarchy(allWikiEntries);

// Generate dynamic breadcrumbs
const breadcrumbs = generateWikiBreadcrumbs(entry, allWikiEntries);

// Get the category content
const categoryContent = wikiHierarchy[category];

// GitHub edit URL
const githubUrl = "https://github.com/carlsendk/tech-leadership";
const currentPath = Astro.url.pathname;
const editUrl = `${githubUrl}/edit/main/src/content/wiki/${entry.slug}.md`;

// Sort function for entries
const sortEntries = (a: any, b: any) => {
  if ((a.data.order ?? 999) !== (b.data.order ?? 999)) {
    return (a.data.order ?? 999) - (b.data.order ?? 999);
  }
  return a.data.title.localeCompare(b.data.title);
};

// Sort entries in subcategories
if (categoryContent) {
  for (const subcategory in categoryContent.subcategories) {
    categoryContent.subcategories[subcategory].entries.sort(sortEntries);
  }
  categoryContent.entries.sort(sortEntries);
}
---

<Layout title={title} description={description}>
  <!-- Hero Section -->
  {heroImage && (
    <div class="relative h-64 sm:h-80 lg:h-96 overflow-hidden mb-8">
      <img 
        src={heroImage} 
        alt={heroImageAlt || title}
        class="w-full h-full object-cover hero-image"
        onerror="this.style.display='none'; this.parentElement.classList.add('hero-fallback');"
      />
      <!-- Background gradient (always present, visible when image fails) -->
      <div class="absolute inset-0 bg-gradient-to-br from-accent-600 via-accent-700 to-primary-800"></div>
      <div class="absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent"></div>
      
      <div class="absolute inset-0 flex items-end">
        <div class="w-full p-6 lg:p-12">
          <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="max-w-5xl">
              <div class="flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-white/90 mb-4">
                <a href={`/categories/${category}`} class="hover:text-white transition-colors font-medium bg-white/10 px-3 py-1 rounded-full backdrop-blur-sm">
                  {category}
                </a>
              </div>
              <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight">
                {title}
              </h1>
              <p class="text-xl sm:text-2xl text-white/95 leading-relaxed max-w-4xl">
                {description}
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <style>
      .hero-fallback .hero-image {
        display: none !important;
      }
    </style>
  )}

  <div class="flex flex-col lg:flex-row">
    <!-- Wiki navigation sidebar -->
    <aside
      class="lg:w-64 flex-shrink-0 lg:h-[calc(100vh-64px)] lg:sticky lg:top-16 overflow-y-auto border-r border-primary-200 dark:border-primary-800"
    >
      <WikiSidebar activeCategory={category} currentSlug={entry.slug} />
    </aside>

    <!-- Main content -->
    <main class="flex-grow px-4 py-6 sm:px-6 lg:px-8 max-w-4xl mx-auto">
      <div class="mb-6">
        <Breadcrumb items={breadcrumbs} />
      </div>

      <article class="fade-in">
        {!heroImage && (
          <header class="mb-8">
            <div class="flex items-center justify-between mb-4">
              <div class="flex items-center text-sm text-primary-500 dark:text-primary-400">
                <a
                  href={`/categories/${category}`}
                  class="hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
                >
                  {category}
                </a>
              </div>
              <a
                href={editUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center text-sm text-primary-600 dark:text-primary-300 hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
              >
                <svg
                  class="w-4 h-4 mr-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                  ></path>
                </svg>
                Edit on GitHub
              </a>
            </div>

            <h1 class="text-3xl font-bold text-primary-900 dark:text-primary-100 sm:text-4xl">
              {title}
            </h1>

            <p class="mt-3 text-xl text-primary-600 dark:text-primary-300">
              {description}
            </p>

            <div class="mt-4">
              <TagList tags={tags} />
            </div>
          </header>
        )}

        {heroImage && (
          <header class="mb-8">
            <div class="flex items-center justify-between mb-4">
              <div class="mt-4">
                <TagList tags={tags} />
              </div>
              <a
                href={editUrl}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center text-sm text-primary-600 dark:text-primary-300 hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
              >
                <svg
                  class="w-4 h-4 mr-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                  ></path>
                </svg>
                Edit on GitHub
              </a>
            </div>
          </header>
        )}

        <!-- Show the page content if it exists -->
        <div class="prose max-w-none dark:prose-dark prose-lg prose-primary mb-12">
          <slot />
        </div>

        <!-- Category structure display -->
        {categoryContent && (
          <div class="mt-12">
            <h2 class="text-2xl font-bold text-primary-900 dark:text-primary-100 mb-8 flex items-center">
              <svg class="w-6 h-6 mr-3 text-accent-600 dark:text-accent-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
              </svg>
              Topics in this Section
            </h2>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
              <!-- Subcategories -->
              {Object.entries(categoryContent.subcategories).map(([subcategory, subContent]) => (
                <div class="bg-primary-50 dark:bg-primary-900 rounded-lg p-6 border border-primary-200 dark:border-primary-700">
                  <h3 class="text-lg font-semibold text-primary-900 dark:text-primary-100 mb-3 flex items-center">
                    <svg class="w-5 h-5 mr-2 text-accent-600 dark:text-accent-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h2a2 2 0 012 2v0H8v0z"></path>
                    </svg>
                    {subcategory}
                  </h3>
                  
                  {subContent.index && (
                    <div class="mb-4">
                      <a
                        href={getWikiUrl(subContent.index.slug)}
                        class="text-accent-600 dark:text-accent-400 hover:text-accent-700 dark:hover:text-accent-300 font-medium transition-colors"
                      >
                        ðŸ“– {subContent.index.data.title}
                      </a>
                      <p class="text-sm text-primary-600 dark:text-primary-400 mt-1">
                        {subContent.index.data.description}
                      </p>
                    </div>
                  )}
                  
                  {subContent.entries.length > 0 && (
                    <div class="space-y-2">
                      <h4 class="text-sm font-medium text-primary-700 dark:text-primary-300 mb-2">
                        Articles ({subContent.entries.length})
                      </h4>
                      {subContent.entries.map((entry) => (
                        <a
                          href={getWikiUrl(entry.slug)}
                          class="block text-sm text-primary-600 dark:text-primary-400 hover:text-accent-600 dark:hover:text-accent-400 transition-colors"
                        >
                          â€¢ {entry.data.title}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </div>

            <!-- Main category articles if any -->
            {categoryContent.entries.length > 0 && (
              <div class="mt-8">
                <h3 class="text-xl font-semibold text-primary-900 dark:text-primary-100 mb-4">
                  Additional Articles
                </h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {categoryContent.entries.map((entry) => (
                    <a
                      href={getWikiUrl(entry.slug)}
                      class="block p-4 bg-primary-50 dark:bg-primary-900 rounded-lg border border-primary-200 dark:border-primary-700 hover:bg-accent-50 dark:hover:bg-accent-900/20 transition-colors"
                    >
                      <h4 class="font-medium text-primary-900 dark:text-primary-100 mb-2">
                        {entry.data.title}
                      </h4>
                      <p class="text-sm text-primary-600 dark:text-primary-400">
                        {entry.data.description}
                      </p>
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        )}
      </article>
    </main>
  </div>
</Layout>