{
  "id": "engineering-practices",
  "title": "Engineering Practices Maturity Assessment",
  "description": "Evaluate your organization's engineering practices maturity across five key stages: Normalization, Standardization, Expansion, Automation, and Self-Service.",
  "type": "questionnaire",
  "version": "1.0",
  "category": "Engineering Excellence",
  "estimatedTime": 15,
  "sections": [
    {
      "id": "normalization",
      "title": "Normalization Practices",
      "description": "Foundation: Establishing consistent basic practices across teams",
      "weight": 0.2,
      "questions": [
        {
          "id": "version-control",
          "text": "How mature is your version control system?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "No VCS",
            "Basic Git",
            "Structured Workflows",
            "Advanced Branching",
            "Full Automation"
          ],
          "helpText": "Consider branching strategies, code review processes, and automation.",
          "required": true
        },
        {
          "id": "development-guidelines",
          "text": "How well-established are your development guidelines?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "No Guidelines",
            "Basic Rules",
            "Documented Standards",
            "Enforced Standards",
            "Automated Enforcement"
          ],
          "helpText": "Think about coding standards, code review processes, and documentation practices.",
          "required": true
        },
        {
          "id": "standardized-systems",
          "text": "How consistent are your development tools and environments?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Ad-hoc Tools",
            "Some Standards",
            "Mostly Consistent",
            "Highly Standardized",
            "Fully Automated Setup"
          ],
          "helpText": "Consider development environment setup, tooling consistency, and environment management.",
          "required": true
        }
      ]
    },
    {
      "id": "standardization",
      "title": "Standardization Practices",
      "description": "Consistency: Creating reusable patterns and golden paths",
      "weight": 0.2,
      "questions": [
        {
          "id": "golden-path",
          "text": "How well-defined are your golden paths for common workflows?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "No Patterns",
            "Some Templates",
            "Documented Paths",
            "Automated Paths",
            "Self-Optimizing Paths"
          ],
          "helpText": "Think about standardized workflows for new projects, deployments, and common development tasks.",
          "required": true
        },
        {
          "id": "infrastructure-as-code",
          "text": "How mature is your Infrastructure as Code implementation?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Manual Setup",
            "Some Scripts",
            "Basic IaC",
            "Advanced IaC",
            "Full Automation"
          ],
          "helpText": "Consider declarative infrastructure, version control of infrastructure, and automated provisioning.",
          "required": true
        },
        {
          "id": "containerization",
          "text": "How consistently do you use containerization across your applications?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "No Containers",
            "Some Apps",
            "Most Apps",
            "All Apps",
            "Advanced Orchestration"
          ],
          "helpText": "Think about Docker usage, container registries, and orchestration platforms.",
          "required": true
        }
      ]
    },
    {
      "id": "expansion",
      "title": "Expansion Practices",
      "description": "Scaling: Enabling autonomous teams with end-to-end ownership",
      "weight": 0.2,
      "questions": [
        {
          "id": "autonomous-teams",
          "text": "How autonomous are your development teams?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Dependent Teams",
            "Some Autonomy",
            "Mostly Autonomous",
            "High Autonomy",
            "Full End-to-End Ownership"
          ],
          "helpText": "Consider team decision-making authority, cross-functional capabilities, and ownership scope.",
          "required": true
        },
        {
          "id": "continuous-integration",
          "text": "How mature is your continuous integration process?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Manual Testing",
            "Basic CI",
            "Automated Testing",
            "Advanced CI",
            "Full Quality Gates"
          ],
          "helpText": "Think about automated testing, build automation, and quality gates.",
          "required": true
        },
        {
          "id": "observability",
          "text": "How comprehensive is your observability and feedback system?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Basic Logs",
            "Some Monitoring",
            "Good Observability",
            "Advanced Insights",
            "Predictive Analytics"
          ],
          "helpText": "Consider monitoring, logging, tracing, and alerting capabilities.",
          "required": true
        }
      ]
    },
    {
      "id": "automation",
      "title": "Automation Practices",
      "description": "Intelligence: Implementing intelligent operations and self-healing systems",
      "weight": 0.2,
      "questions": [
        {
          "id": "automated-configuration",
          "text": "How automated is your system configuration management?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Manual Config",
            "Some Automation",
            "Mostly Automated",
            "Full Automation",
            "Self-Healing"
          ],
          "helpText": "Think about configuration management, drift detection, and automated remediation.",
          "required": true
        },
        {
          "id": "automated-provisioning",
          "text": "How automated is your resource provisioning?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Manual Provisioning",
            "Script-Based",
            "Template-Based",
            "Policy-Based",
            "AI-Driven"
          ],
          "helpText": "Consider auto-scaling, resource optimization, and cost management automation.",
          "required": true
        },
        {
          "id": "devsecops",
          "text": "How integrated is security throughout your development lifecycle?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Security Afterthought",
            "Basic Scanning",
            "Integrated Security",
            "Shift-Left Security",
            "Security by Design"
          ],
          "helpText": "Think about security scanning, compliance automation, and vulnerability management.",
          "required": true
        }
      ]
    },
    {
      "id": "self-service",
      "title": "Self-Service Practices",
      "description": "Platform: Enabling platform-driven development and citizen developers",
      "weight": 0.2,
      "questions": [
        {
          "id": "self-service-platform",
          "text": "How mature is your self-service developer platform?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "No Platform",
            "Basic Tools",
            "Developer Portal",
            "Rich Platform",
            "AI-Enhanced Platform"
          ],
          "helpText": "Consider developer portals, self-service APIs, and platform automation.",
          "required": true
        },
        {
          "id": "low-code-solutions",
          "text": "How effectively do you leverage low-code/no-code solutions?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "No Low-Code",
            "Basic Tools",
            "Some Adoption",
            "Strategic Use",
            "Platform Integration"
          ],
          "helpText": "Think about business application development and citizen developer enablement.",
          "required": true
        },
        {
          "id": "golden-path-evolution",
          "text": "How data-driven is your golden path optimization?",
          "type": "scale",
          "min": 1,
          "max": 5,
          "labels": [
            "Static Paths",
            "Manual Updates",
            "Feedback-Driven",
            "Data-Optimized",
            "AI-Optimized"
          ],
          "helpText": "Consider how you collect feedback and continuously improve your development workflows.",
          "required": true
        }
      ]
    }
  ],
  "scoring": {
    "maxScore": 75,
    "weights": {
      "normalization": 0.2,
      "standardization": 0.2,
      "expansion": 0.2,
      "automation": 0.2,
      "selfService": 0.2
    },
    "recommendations": [
      {
        "scoreRange": [
          0,
          30
        ],
        "title": "Focus on Foundation",
        "description": "Your organization needs to establish basic engineering practices before advancing to higher maturity stages.",
        "items": [
          "Implement consistent version control workflows",
          "Establish development guidelines and code review processes",
          "Standardize development tools and environments",
          "Create basic documentation practices"
        ],
        "nextSteps": [
          {
            "href": "/tech-leadership/wiki/engineering-practices/normalization/",
            "title": "Normalization Stage",
            "description": "Foundation building blocks: version control, guidelines, and standardized systems"
          },
          {
            "href": "/tech-leadership/blog/engineering-practices-health-check/",
            "title": "Engineering Practices Health Check: A Maturity Assessment Model",
            "description": "Inspired by Spotify's squad health check, we present a comprehensive model for assessing engineering practices maturity across your organization"
          },
          {
            "href": "/tech-leadership/wiki/engineering-practices/normalization/version-control/",
            "title": "Version Control Systems",
            "description": "Implementing Git workflows, branching strategies, and access control for effective code management"
          }
        ],
        "priority": "high"
      },
      {
        "scoreRange": [
          31,
          45
        ],
        "title": "Build Consistency",
        "description": "You have solid foundations. Focus on creating reusable patterns and golden paths.",
        "items": [
          "Develop golden paths for common workflows",
          "Implement Infrastructure as Code",
          "Standardize containerization practices",
          "Create template-based development workflows"
        ],
        "nextSteps": [
          {
            "href": "/tech-leadership/wiki/engineering-practices/standardization/",
            "title": "Standardization Stage",
            "description": "Creating consistency through deployment patterns, Golden Path, and Infrastructure as Code"
          },
          {
            "href": "/tech-leadership/wiki/engineering-practices/standardization/golden-path/",
            "title": "Golden Path Implementation",
            "description": "Creating and promoting paved road practices for common development workflows"
          },
          {
            "href": "/tech-leadership/wiki/engineering-practices/standardization/infrastructure-as-code/",
            "title": "Infrastructure as Code",
            "description": "Declarative infrastructure management using Terraform, Kubernetes, and automated provisioning"
          }
        ],
        "priority": "high"
      },
      {
        "scoreRange": [
          46,
          60
        ],
        "title": "Scale with Autonomy",
        "description": "Your standardization is good. Focus on enabling autonomous teams and end-to-end ownership.",
        "items": [
          "Increase team autonomy and decision-making authority",
          "Implement comprehensive CI/CD pipelines",
          "Build robust observability and feedback systems",
          "Enable teams with full stack capabilities"
        ],
        "nextSteps": [
          {
            "href": "/tech-leadership/wiki/engineering-practices/expansion/",
            "title": "Expansion Stage",
            "description": "Scaling autonomous teams through continuous integration and delivery practices"
          },
          {
            "href": "/tech-leadership/wiki/engineering-practices/expansion/autonomous-teams/",
            "title": "Autonomous Teams",
            "description": "Empowering self-organized teams with end-to-end ownership, decision-making authority, and cross-functional capabilities"
          },
          {
            "href": "/tech-leadership/blog/autonomous-teams-implementation/",
            "title": "From Dependency Hell to Autonomous Teams: A Practical Implementation Guide",
            "description": "Step-by-step guide to transforming dependent teams into autonomous, end-to-end ownership structures that deliver faster with higher quality"
          }
        ],
        "priority": "medium"
      },
      {
        "scoreRange": [
          61,
          70
        ],
        "title": "Automate Operations",
        "description": "Your teams are scaling well. Focus on intelligent automation and self-healing systems.",
        "items": [
          "Implement automated configuration management",
          "Build intelligent resource provisioning",
          "Integrate security throughout the development lifecycle",
          "Create predictive analytics for system health"
        ],
        "nextSteps": [
          {
            "href": "/tech-leadership/wiki/engineering-practices/automation/",
            "title": "Automation Stage",
            "description": "Full automation of system configuration, resource provisioning, and security integration"
          },
          {
            "href": "/tech-leadership/wiki/engineering-practices/automation/automated-system-configuration/",
            "title": "Automated System Configuration",
            "description": "Configuration management, drift detection, and self-healing systems that ensure consistent and reliable infrastructure"
          },
          {
            "href": "/tech-leadership/wiki/engineering-practices/automation/devsecops/",
            "title": "DevSecOps Integration",
            "description": "Integrating security practices throughout the software development lifecycle"
          }
        ],
        "priority": "medium"
      },
      {
        "scoreRange": [
          71,
          75
        ],
        "title": "Enable Self-Service",
        "description": "You have excellent automation. Focus on platform-driven development and citizen developers.",
        "items": [
          "Build comprehensive self-service developer platforms",
          "Enable low-code/no-code solutions strategically",
          "Implement AI-driven golden path optimization",
          "Empower citizen developers with proper governance"
        ],
        "nextSteps": [
          {
            "href": "/tech-leadership/wiki/engineering-practices/self-service/",
            "title": "Self-Service Stage",
            "description": "Developer platforms, refined Golden Path, and citizen developer enablement"
          },
          {
            "href": "/tech-leadership/wiki/engineering-practices/self-service/self-service-platform/",
            "title": "Self-Service Platform",
            "description": "Developer portals, infrastructure APIs, and automated workflows that enable team independence and rapid innovation"
          },
          {
            "href": "/tech-leadership/blog/golden-path-evolution/",
            "title": "The Evolution of Golden Paths: From Standardization to Intelligence",
            "description": "How Golden Paths evolve from simple templates to intelligent, self-optimizing developer experiences that adapt to team needs"
          }
        ],
        "priority": "low"
      }
    ]
  },
  "tags": [
    "engineering-practices",
    "maturity-assessment",
    "team-health",
    "continuous-improvement"
  ],
  "createdAt": "2025-01-13T00:00:00.000Z",
  "updatedAt": "2025-01-13T00:00:00.000Z"
}